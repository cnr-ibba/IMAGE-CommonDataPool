version: '3.2'

services:

  supercronic:
    build: ./supercronic/.
    env_file:
      - .env
    links:
      - nginx
    volumes:
      - ./supercronic/scripts/:/code/scripts/
      - ./data/:/code/data/
    networks:
      - nginx_network

  djangoapp:
    build: ./djangoapp/
    env_file:
      - .env
    volumes:
      - ./image_backend/:/code/
    networks:
      - nginx_network
      - db_network  # <-- connect to the bridge
    depends_on:  # <-- wait for db to be "ready" before starting the app
      - db

  nginx:
    image: nginx:1.17
    ports:
      - 26081:80
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./image_backend/:/code/
    networks:
      - nginx_network
    depends_on:
      - djangoapp

  db:  # <-- IMPORTANT: same name as in DATABASES setting, otherwise Django won't find the database!
    build: ./postgis/
    env_file:
      - .env
    # Set db environment
    environment:
      # these passwords will be taken from .env file (not tracked in GIT)
      PGPASSWORD: ${POSTGRES_PASSWORD}

    networks:  # <-- connect to the bridge
      - db_network
    # to export volume, as recommeded in https://registry.hub.docker.com/u/library/mysql/
    volumes:
      - type: bind
        source: ./postgis-data/
        target: /var/lib/postgresql/data/

      # # all scripts and sql file inside this directory will be executed after database initialization
      - type: bind
        source: ./postgis/docker-entrypoint-initdb.d/
        target: /docker-entrypoint-initdb.d/

    # espose a port for testing purpuse
    ports:
      - "25432:5432"

networks:
  nginx_network:
    driver: bridge
  db_network:  # <-- add the bridge
    driver: bridge
